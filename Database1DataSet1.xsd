<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Database1DataSet1" targetNamespace="http://tempuri.org/Database1DataSet1.xsd" xmlns:mstns="http://tempuri.org/Database1DataSet1.xsd" xmlns="http://tempuri.org/Database1DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="Database1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Database1ConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.librarymanagement.My.MySettings.GlobalReference.Default.Database1ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BooklistTableAdapter" GeneratorDataComponentClassName="BooklistTableAdapter" Name="Booklist" UserDataComponentName="BooklistTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (MySettings)" DbObjectName="dbo.Booklist" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Booklist] WHERE (([bookid] = @Original_bookid) AND ((@IsNull_bookname = 1 AND [bookname] IS NULL) OR ([bookname] = @Original_bookname)) AND ((@IsNull_authorname = 1 AND [authorname] IS NULL) OR ([authorname] = @Original_authorname)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_bookid" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_bookname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_bookname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_authorname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="authorname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_authorname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="authorname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Booklist] ([bookid], [bookname], [authorname]) VALUES (@bookid, @bookname, @authorname);
SELECT bookid, bookname, authorname FROM Booklist WHERE (bookid = @bookid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@bookid" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@bookname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@authorname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="authorname" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT bookid, bookname, authorname FROM dbo.Booklist</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Booklist] SET [bookid] = @bookid, [bookname] = @bookname, [authorname] = @authorname WHERE (([bookid] = @Original_bookid) AND ((@IsNull_bookname = 1 AND [bookname] IS NULL) OR ([bookname] = @Original_bookname)) AND ((@IsNull_authorname = 1 AND [authorname] IS NULL) OR ([authorname] = @Original_authorname)));
SELECT bookid, bookname, authorname FROM Booklist WHERE (bookid = @bookid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@bookid" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@bookname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@authorname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="authorname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_bookid" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_bookname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_bookname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_authorname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="authorname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_authorname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="authorname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="bookid" DataSetColumn="bookid" />
              <Mapping SourceColumn="bookname" DataSetColumn="bookname" />
              <Mapping SourceColumn="authorname" DataSetColumn="authorname" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Database1DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="Database1DataSet1" msprop:Generator_UserDSName="Database1DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Booklist" msprop:Generator_TableClassName="BooklistDataTable" msprop:Generator_TableVarName="tableBooklist" msprop:Generator_TablePropName="Booklist" msprop:Generator_RowDeletingName="BooklistRowDeleting" msprop:Generator_RowChangingName="BooklistRowChanging" msprop:Generator_RowEvHandlerName="BooklistRowChangeEventHandler" msprop:Generator_RowDeletedName="BooklistRowDeleted" msprop:Generator_UserTableName="Booklist" msprop:Generator_RowChangedName="BooklistRowChanged" msprop:Generator_RowEvArgName="BooklistRowChangeEvent" msprop:Generator_RowClassName="BooklistRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="bookid" msprop:Generator_ColumnVarNameInTable="columnbookid" msprop:Generator_ColumnPropNameInRow="bookid" msprop:Generator_ColumnPropNameInTable="bookidColumn" msprop:Generator_UserColumnName="bookid">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="bookname" msprop:Generator_ColumnVarNameInTable="columnbookname" msprop:Generator_ColumnPropNameInRow="bookname" msprop:Generator_ColumnPropNameInTable="booknameColumn" msprop:Generator_UserColumnName="bookname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="authorname" msprop:Generator_ColumnVarNameInTable="columnauthorname" msprop:Generator_ColumnPropNameInRow="authorname" msprop:Generator_ColumnPropNameInTable="authornameColumn" msprop:Generator_UserColumnName="authorname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Booklist" />
      <xs:field xpath="mstns:bookid" />
    </xs:unique>
  </xs:element>
</xs:schema>